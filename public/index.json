
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"I am a PhD candidate in the Government Department at Harvard University, specializing in the intricate causes of political violence, civil wars, and regime instability. My research primarily investigates the role of climate change, its measurements, and its potential impact on current political outcomes. To analyze these rare and complex phenomena, I utilize Machine Learning techniques and satellite imagery data. My methodological approach is rooted in statistical methods, encompassing Bayesian Additive Regression Trees (BART), Robust Estimators, and Geospatial statistics. My regional area of interest lies within the Horn of Africa.\n","date":1681084800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1681084800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am a PhD candidate in the Government Department at Harvard University, specializing in the intricate causes of political violence, civil wars, and regime instability. My research primarily investigates the role of climate change, its measurements, and its potential impact on current political outcomes.","tags":null,"title":"Daniel K Baissa","type":"authors"},{"authors":[],"categories":null,"content":"\rClick on the Slides button above to view the built-in slides feature.\rSlides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":["Python"],"content":"As a PhD student, I need to read a lot of academic papers, but I don’t always have time to sit down and read them. To make the most of my time, I decided to learn how to code in Python and create a program that could convert journal articles and other PDFs into short audio books. In this tutorial, I’ll show you how to create a simple PDF to MP3 converter using Python, the gTTS library (Google Text-to-Speech), and pdfplumber for extracting text from PDF files. We’ll also create a graphical user interface (GUI) using tkinter to make the program more user-friendly. Prerequisites\nBefore we get started, you’ll need to have Python installed on your computer. You’ll also need to install the following Python packages using pip:\ngtts: Google Text-to-Speech library for converting text to speech.\rpdfplumber: Extracting text from PDF files.\rtkinter: Creating a graphical user interface (GUI) for the converter.\rYou can install these packages using the following command:\npip install gtts pdfplumber Note that tkinter is included in most Python installations by default. If it is not available, refer to the official Python documentation for installation instructions.\nExtracting Text from a PDF Our PDF to MP3 converter has two main processes: extracting text from the PDF and converting that text to speech using gTTS. Here’s the code for the first process:\nimport pdfplumber from gtts import gTTS def extract_text_from_pdf(pdf_path): with pdfplumber.open(pdf_path) as pdf: text = \u0026#34;\u0026#34; for page in pdf.pages: text += page.extract_text() return text def text_to_speech(text, output_path, language=\u0026#39;en\u0026#39;): tts = gTTS(text=text, lang=language) tts.save(output_path) def main(): pdf_path = \u0026#39;path/to/your/pdf/file.pdf\u0026#39; # Replace with your PDF file path output_path = \u0026#39;output.mp3\u0026#39; # Replace with your desired output path text = extract_text_from_pdf(pdf_path) text_to_speech(text, output_path) print(f\u0026#34;MP3 file saved at {output_path}\u0026#34;) if __name__ == \u0026#34;__main__\u0026#34;: main() The extract_text_from_pdf function uses pdfplumber to extract the text from each page of the PDF file, and then concatenates the text into a single string. We then use gTTS to convert the text to an MP3 file using the text_to_speech function.\nNote that the main function is just an example of how to use these functions. We’ll replace it with a more user-friendly GUI in the next section.\nCreating a GUI To make our PDF to MP3 converter more user-friendly, we’ll create a graphical user interface (GUI) using tkinter. Here’s the updated code:\nimport os import tkinter as tk from tkinter import filedialog import pdfplumber from gtts import gTTS def extract_text_from_pdf(pdf_path): with pdfplumber.open(pdf_path) as pdf: text = \u0026#34;\u0026#34; for page in pdf.pages: text += page.extract_text() return text def text_to_speech(text, output_path, language=\u0026#39;en\u0026#39;): tts = gTTS(text=text, lang=language) tts.save(output_path) def browse_pdf(): file_path = filedialog.askopenfilename(filetypes=[(\u0026#34;PDF files\u0026#34;, \u0026#34;*.pdf\u0026#34;)]) if file_path: pdf_path_var.set(file_path) def convert_to_mp3(): pdf_path = pdf_path_var.get() if not pdf_path: return output_path = filedialog.asksaveasfilename(defaultextension=\u0026#34;.mp3\u0026#34;, filetypes=[(\u0026#34;MP3 files\u0026#34;, \u0026#34;*.mp3\u0026#34;)]) if not output_path: return text = extract_text_from_pdf(pdf_path) text_to_speech(text, output_path) result_var.set(f\u0026#34;MP3 file saved at {output_path}\u0026#34;) app = tk.Tk() app.title(\u0026#34;PDF to MP3 Converter\u0026#34;) pdf_path_var = tk.StringVar() result_var = tk.StringVar() frame = tk.Frame(app, padx=10, pady=10) frame.pack() pdf_label = tk.Label(frame, text=\u0026#34;PDF File:\u0026#34;) pdf_label.grid(row=0, column=0, sticky=\u0026#34;e\u0026#34;) pdf_entry = tk.Entry(frame, width=40, textvariable=pdf_path_var) pdf_entry.grid(row=0, column=1) pdf_button = tk.Button(frame, text=\u0026#34;Browse\u0026#34;, command=browse_pdf) pdf_button.grid(row=0, column=2) convert_button = tk.Button(frame, text=\u0026#34;Convert to MP3\u0026#34;, command=convert_to_mp3) convert_button.grid(row=1, column=1, pady=10) result_label = tk.Label(frame, textvariable=result_var) result_label.grid(row=2, column=0, columnspan=3) app.mainloop() This is just a basic example of how you can create a GUI for the text-to-speech app using Tkinter. You can further customize and improve the interface as needed.\nNow this is a fun toy, but like I said, I am a PhD student which means I will encounter lots of text with tables and figures. Even if the program can read the tables, which is questionable, it will likely sound obsurd and unhelpful to listen to the program read them. So I want it to write this to remove the tables and figures and say “see pdf for tables and figures”\nTo achieve this, we can use the pdfplumber library to find images and tables within the PDF document, and then replace their text with “See PDF for tables and figures.” To do this, we’ll modify the extract_text_from_pdf function:\nimport os import tkinter as tk from tkinter import filedialog, ttk import pdfplumber from gtts import gTTS import threading def extract_text_from_pdf(pdf_path): with pdfplumber.open(pdf_path) as pdf: text = \u0026#34;\u0026#34; for …","date":1681344000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1681344000,"objectID":"04fc19350795d29458c9f7b7ed41adad","permalink":"https://example.com/post/2023-04-18-create-a-pdf-to-mp3-converter-with-python/tts/","publishdate":"2023-04-13T00:00:00Z","relpermalink":"/post/2023-04-18-create-a-pdf-to-mp3-converter-with-python/tts/","section":"post","summary":"As a PhD student, I need to read a lot of academic papers, but I don’t always have time to sit down and read them. To make the most of my time, I decided to learn how to code in Python and create a program that could convert journal articles and other PDFs into short audio books.","tags":["text-to-speech","gtts","pdfplumber","tkinter","pdf-to-mp3"],"title":"Create a PDF to MP3 Converter with Python","type":"post"},{"authors":["Daniel K Baissa","Melani Cammett"],"categories":null,"content":"","date":1681084800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1681084800,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://example.com/publication/journal-article/","publishdate":"2023-04-10T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"We find that foreign aid, particularly concessional lending, is crucial for authoritarian resilience","tags":null,"title":"External Support and Persistent Authoritarianism in the Middle East","type":"publication"},{"authors":["Natasha Murtaza","Daniel K Baissa"],"categories":null,"content":"","date":1681084800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1681084800,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://example.com/publication/preprint/","publishdate":"2023-04-10T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Through Cox Proportional Hazards models, we show that state and party strength predict the likelihood of a military coup better than established indicators of military strength.","tags":null,"title":"Theorizing about the Civil in Civil-Military Relations: Why Political Party Behavior Dictates Military Strategies","type":"publication"},{"authors":["Daniel K Baissa","Carlisle Rainey"],"categories":null,"content":"","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577836800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://example.com/publication/conference-paper/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"We highlight the importance of using more robust estimators along with variable transformations.","tags":[],"title":"When BLUE is not best: non-normal errors and the linear model","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne\rTwo\rThree\rA fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://example.com/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://example.com/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"}]